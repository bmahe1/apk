version: 0.2

env:
  variables:
    # This is the correct path for the Java 17 Corretto runtime in AWS CodeBuild
    JAVA_HOME: "/usr/lib/jvm/java-17-amazon-corretto-amd64"
    # Set your S3 bucket and folder name here
    S3_BUCKET: "inst-clone"
    FOLDER_NAME: "calculator-app"

phases:
  install:
    runtime-versions:
      # This selects the Java version that CodeBuild prepares
      java: corretto17
    commands:
      - echo "Installing Android SDK..."
      - wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O android-sdk.zip
      - mkdir -p $HOME/android-sdk/cmdline-tools
      - unzip -q android-sdk.zip -d $HOME/android-sdk/cmdline-tools
      - mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
      - export ANDROID_HOME=$HOME/android-sdk
      - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
      # This command will now succeed because JAVA_HOME is set correctly from the 'env' block
      - yes | sdkmanager --licenses
      - sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

  pre_build:
    commands:
      # Grant execute permissions to the Gradle Wrapper
      - chmod +x ./gradlew
      
  build:
    commands:
      - echo "Building release APK..."
      - ./gradlew assembleRelease

  post_build:
    commands:
      - echo "âœ… Build successful. Uploading APK to S3..."
      # Copy the generated APK to the specified S3 bucket and folder
      - aws s3 cp app/build/outputs/apk/release/app-release.apk s3://$S3_BUCKET/$FOLDER_NAME/app-release.apk

artifacts:
  files:
    # Define the generated APK as a build artifact
    - app/build/outputs/apk/release/app-release.apk
  discard-paths: yes
