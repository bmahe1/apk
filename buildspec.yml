version: 0.2

env:
  variables:
    S3_BUCKET: "inst-clone"
    FOLDER_NAME: "calculator-app"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Installing Android SDK..."
      - wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O android-sdk.zip
      - mkdir -p $HOME/android-sdk/cmdline-tools
      - unzip -q android-sdk.zip -d $HOME/android-sdk/cmdline-tools
      - mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
      - export ANDROID_HOME=$HOME/android-sdk
      - export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
      - yes | sdkmanager --licenses
      - sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

  pre_build:
    commands:
      - apt-get update -y
      - apt-get install -y dos2unix
      - dos2unix ./gradlew
      - chmod +x ./gradlew
      
  build:
    commands:
      - echo "--- Debugging Java environment ---"
      - echo "JAVA_HOME is: $JAVA_HOME"
      - echo "PATH is: $PATH"
      - echo "Which java: $(which java)"
      - ls -l "$(which java)"
      - java -version
      - echo "--- End Debugging ---"
      
      - echo "Building release APK..."
      # Force JAVACMD to be set before executing the script
      - export JAVACMD="$JAVA_HOME/bin/java"
      - bash ./gradlew assembleRelease

  post_build:
    commands:
      - echo "Listing APK files..."
      - find . -type f -name "*.apk"
      - echo "Uploading APK to S3..."
      - aws s3 cp app/build/outputs/apk/release/app-release.apk s3://$S3_BUCKET/$FOLDER_NAME/app-release.apk

artifacts:
  files:
    - app/build/outputs/apk/release/app-release.apk
  discard-paths: yes

